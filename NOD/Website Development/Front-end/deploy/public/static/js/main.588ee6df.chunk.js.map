{"version":3,"sources":["reportWebVitals.js","redux/reducers/ThemeReducer.js","redux/reducers/index.js","assets/images/logo.png","components/sidebar/Sidebar.jsx","components/badge/dropdown/Dropdown.jsx","redux/actions/ThemeAction.js","components/thememenu/ThemeMenu.jsx","assets/images/user_image.png","components/topnav/TopNav.jsx","components/status-card/StatusCard.jsx","assets/images/aqi.png","assets/images/noise.png","pages/Dashboard.jsx","pages/login.jsx","pages/Area.jsx","pages/Area1.jsx","pages/Area2.jsx","pages/Area3.jsx","pages/Area4.jsx","pages/Configuration.jsx","pages/ForgotPassword.jsx","components/Routes.jsx","components/layout/Layout.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeReducer","state","action","type","mode","payload","color","rootReducer","combineReducers","SidebarItem","props","active","className","icon","title","Sidebar","activeItem","sidebar_items","findIndex","item","route","location","pathname","src","logo","alt","map","index","to","display_name","Dropdown","content_ref","toggle_ref","dropdown_toggle_el","useRef","dropdown_content_el","document","addEventListener","e","current","contains","target","classList","toggle","remove","ref","badge","customToggle","contentData","renderItems","renderFooter","exportDefault","setColor","setMode","getTheme","mode_settings","id","name","background","class","color_settings","ThemeMenu","menu_ref","menu_toggle_ref","useState","currMode","setcurrMode","setcurrColor","dispatch","useDispatch","useEffect","themeClass","find","localStorage","getItem","colorClass","undefined","onClick","add","setItem","ThemeAction","curr_user","image","user_image","Topnav","user","user_menu","content","renderUserMenu","StatusCard","values","value","area","field3","field4","defaultProps","chartOptions","series","data","options","chart","dataLabels","enabled","stroke","curve","xaxis","categories","legend","position","grid","show","Dashboard","themeReducer","useSelector","statusCard","setStatusCard","a","fetch","response","json","responseJSON","console","log","feeds","fetchStatusCard","statusCards","theme","height","aqi","noise","appStyle","display","backgroundColor","justifyContent","alignItems","padding","formStyle","border","borderRadius","width","inputStyle","boxSizing","submitStyle","fontSize","Field","React","forwardRef","placeholder","style","Form","onSubmit","usernameRef","passwordRef","error","setError","history","useHistory","preventDefault","username","password","email","firebase","auth","signInWithEmailAndPassword","result","uid","alert","push","catch","errorMessage","message","paddingLeft","flexDirection","flexWrap","maxWidth","required","Login","JSON","stringify","clear","SensorValue","textAlign","nrOfLevels","arcPadding","cornerRadius","percent","field1","formatTextValue","textColor","field2","Area1","sensorValue","setSensorValue","fetchSensorValue","Area2","Area3","Area4","Configuration","sendPasswordResetEmail","ForgotPassword","Routes","path","exact","component","Layout","window","render","TopNav","store","createStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.588ee6df.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ThemeReducer = (state = {}, action) => {\n    switch(action.type) {\n        case 'SET_MODE':\n            return {\n                ...state,\n                mode: action.payload\n            }\n        case 'SET_COLOR':\n            return {\n                ...state,\n                color: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default ThemeReducer","import ThemeReducer from \"./ThemeReducer\"\nimport { combineReducers } from \"redux\"\n\nconst rootReducer = combineReducers({ThemeReducer})\n\nexport default rootReducer","export default __webpack_public_path__ + \"static/media/logo.f03465bd.png\";","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport './sidebar.css'\n\nimport logo from '../../assets/images/logo.png'\n\nimport sidebar_items from '../../assets/JsonData/sidebar_routes.json'\n\nconst SidebarItem = props => {\n\n    const active = props.active ? 'active' : ''\n\n    return (\n        <div className=\"sidebar__item\">\n            <div className={`sidebar__item-inner ${active}`}>\n                <i className={props.icon}></i>\n                <span>\n                    {props.title}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nconst Sidebar = props => {\n\n    const activeItem = sidebar_items.findIndex(item => item.route === props.location.pathname)\n\n    return (\n        <div className='sidebar'>\n            <div className=\"sidebar__logo\">\n                <img src={logo} alt=\"company logo\" />\n            </div>\n            {\n                sidebar_items.map((item, index) => (\n                    <Link to={item.route} key={index}>\n                        <SidebarItem\n                            title={item.display_name}\n                            icon={item.icon}\n                            active={index === activeItem}\n                        />\n                    </Link>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, {useRef} from 'react'\n\nimport './dropdown.css'\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n    document.addEventListener('mousedown', (e) => {\n        // user click toggle\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n            content_ref.current.classList.toggle('active')\n        } else {\n            // user click outside toggle and content\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\n                content_ref.current.classList.remove('active')\n            }\n        }\n    })\n}\n\nconst Dropdown = props => {\n\n    const dropdown_toggle_el = useRef(null)\n    const dropdown_content_el = useRef(null)\n\n    clickOutsideRef(dropdown_content_el, dropdown_toggle_el)\n    \n    return (\n        <div className='dropdown'>\n            <button ref={dropdown_toggle_el} className=\"dropdown__toggle\">\n                {\n                    props.icon ? <i className={props.icon}></i> : ''\n                }\n                {\n                    props.badge ? <span className='dropdown__toggle-badge'>{props.badge}</span> : ''\n                }\n                {\n                    props.customToggle ? props.customToggle() : ''\n                }\n            </button>\n            <div ref={dropdown_content_el} className=\"dropdown__content\">\n                {\n                    props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : ''\n                }\n                {\n                    props.renderFooter ? (\n                        <div className=\"dropdown__footer\">\n                            {props.renderFooter()}\n                        </div>\n                    ) : ''\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Dropdown\n","const setMode = mode => {\n    return {\n        type: 'SET_MODE',\n        payload: mode\n    }\n}\n\nconst setColor = color => {\n    return {\n        type: 'SET_COLOR',\n        payload: color\n    }\n}\n\nconst getTheme = () => {\n    return {\n        type: 'GET_THEME'\n    }\n}\n\nconst exportDefault = {\n    setColor,\n    setMode,\n    getTheme\n}\n\nexport default exportDefault","import React, {useRef, useState, useEffect} from 'react'\n\nimport './thememenu.css'\n\nimport { useDispatch } from 'react-redux'\n\nimport ThemeAction from '../../redux/actions/ThemeAction'\n\nconst mode_settings = [\n    {\n        id: 'light',\n        name: 'Light',\n        background: 'light-background',\n        class: 'theme-mode-light'\n    },\n    {\n        id: 'dark',\n        name: 'Dark',\n        background: 'dark-background',\n        class: 'theme-mode-dark'\n    }\n]\n\nconst color_settings = [\n    {\n        id: 'blue',\n        name: 'Blue',\n        background: 'blue-color',\n        class: 'theme-color-blue'\n    },\n    {\n        id: 'red',\n        name: 'Red',\n        background: 'red-color',\n        class: 'theme-color-red'\n    },\n    {\n        id: 'cyan',\n        name: 'Cyan',\n        background: 'cyan-color',\n        class: 'theme-color-cyan'\n    },\n    {\n        id: 'green',\n        name: 'Green',\n        background: 'green-color',\n        class: 'theme-color-green'\n    },\n    {\n        id: 'orange',\n        name: 'Orange',\n        background: 'orange-color',\n        class: 'theme-color-orange'\n    },\n]\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n    document.addEventListener('mousedown', (e) => {\n        // user click toggle\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n            content_ref.current.classList.toggle('active')\n        } else {\n            // user click outside toggle and content\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\n                content_ref.current.classList.remove('active')\n            }\n        }\n    })\n}\n\nconst ThemeMenu = () => {\n\n    const menu_ref = useRef(null)\n    const menu_toggle_ref = useRef(null)\n\n    clickOutsideRef(menu_ref, menu_toggle_ref)\n\n    const setActiveMenu = () => menu_ref.current.classList.add('active')\n\n    const closeMenu = () => menu_ref.current.classList.remove('active')\n\n    const [currMode, setcurrMode] = useState('light')\n\n    const [currColor, setcurrColor] = useState('red')\n\n    const dispatch = useDispatch()\n\n    const setMode = mode => {\n        setcurrMode(mode.id)\n        localStorage.setItem('themeMode', mode.class)\n        dispatch(ThemeAction.setMode(mode.class))\n    }\n\n    const setColor = color => {\n        setcurrColor(color.id)\n        localStorage.setItem('colorMode', color.class)\n        dispatch(ThemeAction.setColor(color.class))\n    }\n\n    useEffect(() => {\n        const themeClass = mode_settings.find(e => e.class === localStorage.getItem('themeMode', 'theme-mode-light'))\n\n        const colorClass = color_settings.find(e => e.class === localStorage.getItem('colorMode', 'theme-mode-light'))\n\n        if (themeClass !== undefined) setcurrMode(themeClass.id)\n\n        if (colorClass !== undefined) setcurrColor(colorClass.id)\n\n    }, []);\n\n    return (\n        <div>\n            <button ref={menu_toggle_ref} className=\"dropdown__toggle\" onClick={() => setActiveMenu()}>\n                <i className='bx bx-palette'></i>\n            </button>\n            <div ref={menu_ref} className=\"theme-menu\">\n                <h4>Theme settings</h4>\n                <button className=\"theme-menu__close\" onClick={() => closeMenu()}>\n                    <i className='bx bx-x'></i>\n                </button>\n                <div className=\"theme-menu__select\">\n                    <span>Choose mode</span>\n                    <ul className=\"mode-list\">\n                        {\n                            mode_settings.map((item, index) => (\n                                <li key={index} onClick={() => setMode(item)}>\n                                    <div className={`mode-list__color ${item.background} ${item.id === currMode ? 'active' : ''}`}>\n                                        <i className='bx bx-check'></i>\n                                    </div>\n                                    <span>{item.name}</span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n                {/* <div className=\"theme-menu__select\">\n                    <span>Choose color</span>\n                    <ul className=\"mode-list\">\n                        {\n                            color_settings.map((item, index) => (\n                                <li key={index} onClick={() => setColor(item)}>\n                                    <div className={`mode-list__color ${item.background} ${item.id === currColor ? 'active' : ''}`}>\n                                        <i className='bx bx-check'></i>\n                                    </div>\n                                    <span>{item.name}</span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div> */}\n            </div>\n        </div>\n    )\n}\n\nexport default ThemeMenu\n","export default __webpack_public_path__ + \"static/media/user_image.c9034bb5.png\";","import React from 'react'\n\nimport './topnav.css'\n\nimport { Link } from 'react-router-dom'\n\nimport Dropdown from '../badge/dropdown/Dropdown'\n\nimport ThemeMenu from '../thememenu/ThemeMenu'\n\nimport notifications from '../../assets/JsonData/notification.json'\n\nimport user_image from '../../assets/images/user_image.png'\n\nimport user_menu from '../../assets/JsonData/user_menus.json'\n\nconst curr_user = {\n    display_name: 'Admin',\n    image: user_image\n}\n\nconst renderNotificationItem = (item, index) => (\n    <div className=\"notification-item\" key={index}>\n        <i className={item.icon}></i>\n        <span>{item.content}</span>\n    </div>\n)\n\nconst renderUserToggle = (user) => (\n    <div className=\"topnav__right-user\">\n        <div className=\"topnav__right-user__image\">\n            <img src={user.image} alt=\"\" />\n        </div>\n        <div className=\"topnav__right-user__name\">\n            {user.display_name}\n        </div>\n    </div>\n)\n\nconst renderUserMenu =(item, index) => (\n    <Link to='/' key={index}>\n        <div className=\"notification-item\">\n            <i className={item.icon}></i>\n            <span>{item.content}</span>\n        </div>\n    </Link>\n)\n\nconst Topnav = () => {\n    return (\n        <div className='topnav'>\n            \n            <div className=\"topnav__right\">\n                <div className=\"topnav__right-item\">\n                    {/* dropdown here */}\n                    <Dropdown\n                        customToggle={() => renderUserToggle(curr_user)}\n                        contentData={user_menu}\n                        renderItems={(item, index) => renderUserMenu(item, index)}\n                    />\n                </div>\n                <div className=\"topnav__right-item\">\n                    <ThemeMenu/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Topnav\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport './statuscard.css'\n\n\nStatusCard.propTypes = {\n    values: PropTypes.array,\n};\n\nStatusCard.defaultProps = {\n    values: [],\n}\n\n\nfunction StatusCard(props) {\n    const { values } = props;\n\n    return (\n        <div>\n            {values.map(value => (\n                <div className='status-card '>\n                    <div className=\"status-card__icon\" >\n                        <i className={'bx bxs-area'}></i>\n                    </div>\n                    <div className=\"status-card__info\">\n                        <h4>{props.area}</h4>\n                        <h5>AQI: {value.field3} ppm <span className=\"dot\"></span></h5>\n                        <br />\n                        <h5>Noise Level: {value.field4} dB <span className=\"dot\"></span></h5>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default StatusCard\n","export default __webpack_public_path__ + \"static/media/aqi.ecd20a17.png\";","export default __webpack_public_path__ + \"static/media/noise.44c2574a.png\";","import React, { useEffect, useState } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport Chart from 'react-apexcharts'\n\nimport { useSelector } from 'react-redux'\n\nimport './page.css'\n\nimport StatusCard from '../components/status-card/StatusCard'\n\nimport Table from '../components/table/Table'\n\nimport Badge from '../components/badge/Badge'\n\nimport aqi from '../assets/images/aqi.png'\n\nimport noise from '../assets/images/noise.png'\n\nimport statusCards from '../assets/JsonData/status-card-data.json'\n\nconst chartOptions = {\n    series: [{\n        name: 'Average AQI',\n        data: [40, 70, 20, 90, 80, 20, 60]\n    }, {\n        name: 'Average Noise Level',\n        data: [40, 30, 70, 20, 16, 91, 10]\n    }],\n    options: {\n        color: ['#6ab04c', '#2980b9'],\n        chart: {\n            background: 'transparent'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        xaxis: {\n            categories: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        legend: {\n            position: 'top'\n        },\n        grid: {\n            show: false\n        }\n    }\n}\n\nconst Dashboard = () => {\n\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\n\n\n    const [statusCard, setStatusCard] = useState();\n\n    useEffect(() => {\n        //     setInterval(() => {\n        //         async function fetchSensorValue() {\n        //             const endPoint = 'https://api.thingspeak.com/channels/1449821/feeds.json?results=1';\n        //             const response = await fetch(endPoint);\n        //             const responseJSON = await response.json();\n        //             console.log({ responseJSON });\n\n        //             const { feeds } = responseJSON;\n        //             setSensorValue(feeds);\n\n        //         }\n\n        //         fetchSensorValue();\n        //     }, 30000)\n        // }, []);\n        async function fetchStatusCard() {\n            const endPoint = 'https://api.thingspeak.com/channels/1449821/feeds.json?results=1';\n            const response = await fetch(endPoint);\n            const responseJSON = await response.json();\n            console.log({ responseJSON });\n\n            const { feeds } = responseJSON;\n            setStatusCard(feeds);\n        }\n\n        fetchStatusCard();\n    }, []);\n\n    return (\n        <div>\n            <h2 className=\"page-header\">Dashboard</h2>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <div className=\"row\">\n                        {\n                            statusCards.map((item, index) => (\n                                <div className=\"col-6\" key={index}>\n                                    <Link to={item.route} key={index}>\n                                        <StatusCard\n                                            values={statusCard}\n                                            area={item.area}\n                                        />\n                                    </Link>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"col-6\">\n                    <div className=\"card full-height\">\n                        {/* chart */}\n                        <Chart\n                            options={themeReducer === 'theme-mode-dark' ? {\n                                ...chartOptions.options,\n                                theme: { mode: 'dark' }\n                            } : {\n                                ...chartOptions.options,\n                                theme: { mode: 'light' }\n                            }}\n                            series={chartOptions.series}\n                            type='line'\n                            height='100%'\n                        />\n                    </div>\n                </div>\n            </div>\n            <div>\n                <h3>US EPA Air Quality Index</h3>\n                <img className='reponsive-img' src={aqi} alt=\"aqi\" />\n                <h3>Noise Level - Decibel Scale</h3>\n                <img className='reponsive-img' src={noise} alt=\"noise\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard\n","// Note: Uncomment import lines during working with JSX Compiler.\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport logo from '../assets/images/logo.png'\n\nconst appStyle = {\n    height: \"100vh\",\n    display: \"flex\",\n    backgroundColor: \"#0F2147\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: \"15px\"\n};\n\nconst formStyle = {\n    border: '1px solid #c9c9c9',\n    borderRadius: '5px',\n    background: '#f5f5f5',\n    width: '220px',\n    display: 'block'\n};\n\nconst labelStyle = {\n    fontFamily: 'Arial, Helvetica, sans-serif',\n    fontSize: '15px',\n};\n\nconst inputStyle = {\n    padding: '15px',\n    border: '1px solid #bfbfbf',\n    borderRadius: '3px',\n    boxSizing: 'border-box',\n    width: '100%'\n};\n\nconst submitStyle = {\n    padding: '17px 10px',\n    border: '1px solid #efffff',\n    borderRadius: '3px',\n    background: '#3085d6',\n    width: '100%',\n    fontSize: '15px',\n    color: 'white',\n    display: 'block'\n};\n\nconst Field = React.forwardRef(({ placeholder, type }, ref) => {\n    return (\n        <div>\n            <input ref={ref} type={type} placeholder={placeholder} style={inputStyle} />\n        </div>\n    );\n});\n\nconst Form = ({ onSubmit }) => {\n    const usernameRef = React.useRef();\n    const passwordRef = React.useRef();\n    const [error, setError] = React.useState(false)\n    let history = useHistory();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const data = {\n            username: usernameRef.current.value,\n            password: passwordRef.current.value\n        };\n        if (usernameRef.current.value === '' || passwordRef.current.value === '') {\n            setError(true)\n        } else {\n            setError(false)\n        }\n        if (usernameRef.current.value && passwordRef.current.value) {\n            let email = usernameRef.current.value;\n            let password = passwordRef.current.value;\n\n\n            localStorage.setItem(\"museremail\", \"null\");\n            localStorage.setItem(\"museruids\", \"null\");\n            localStorage.setItem(\"hasUser\", false);\n\n\n            firebase.auth().signInWithEmailAndPassword(email, password)\n                .then((result) => {\n\n                    localStorage.setItem(\"museremail\", result.user.email)\n                    localStorage.setItem(\"museruids\", result.user.uid)\n                    alert(\"Success\")\n                    history.push(\"/dashboard\")\n\n\n\n                })\n                .catch(function (error) {\n\n                    var errorMessage = error.message;\n                    alert(errorMessage);\n\n                });\n\n\n        }\n\n        onSubmit(data);\n    };\n    return (\n        <form style={formStyle} onSubmit={handleSubmit} style={{ paddingLeft: 'auto !important' }}>\n\n            <div style={{ display: 'flex', flexDirection: 'row', alignItems: \"center\", flexWrap: \"wrap\" }}>\n                <div className=\"sidebar__logo\">\n                    <img src={logo} alt=\"company logo\" />\n                </div>\n                <div style={{\n                    backgroundColor: \"white\",\n                    height: \"480px\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    flexDirection: \"column\",\n                    borderRadius: \"20px\",\n                    padding: \"20px\",\n                    maxWidth: \"400px\"\n                }}>\n                    <h2>Login Now</h2>\n                    <br /><br />\n                    <Field ref={usernameRef} type=\"email\" placeholder=\"Enter Email Address\" required />\n                    <br />\n\n                    <Field ref={passwordRef} type=\"password\" placeholder=\"Enter Password\" required />\n                    <br />\n                    {error &&\n                        <div style={{ fontSize: 15, color: 'red' }}>Please Fill All Data</div>}\n                    <div>\n                        <br />\n\n                        <button style={submitStyle} type=\"submit\">Login</button>\n                        <Link to={\"/forgotpassword\"} style={{ color: 'blue', fontSize: '12px' }}>Forgot Password</Link>\n\n                    </div>\n\n                </div>\n            </div>\n\n        </form>\n    );\n};\n\n// Usage example:\n\nconst Login = () => {\n    const handleSubmit = data => {\n        const json = JSON.stringify(data, null, 4);\n        console.clear();\n        console.log(json);\n    };\n    return (\n        <div style={appStyle}>\n            <Form onSubmit={handleSubmit} />\n        </div>\n    );\n};\nexport default Login;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GaugeChart from 'react-gauge-chart'\n\nSensorValue.propTypes = {\n    values: PropTypes.array,\n};\n\nSensorValue.defaultProps = {\n    values: [],\n}\n\n\nfunction SensorValue(props) {\n    const { values } = props;\n    \n    return (\n        <div>\n            {values.map(value => (\n                <div style={{ textAlign: 'center' }}>\n                <h2 className=\"page-header\">Real-time Data</h2>\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <h4>Temperature</h4>\n                        <GaugeChart id=\"gauge-chart4\"\n                            nrOfLevels={10}\n                            arcPadding={0.1}\n                            cornerRadius={3}\n                            percent={value.field1/100}\n                            formatTextValue={value => value + '\\u00b0C'}\n                            textColor='black'\n                        />\n                    </div>\n                    <div className=\"col-6\">\n                        <h4>Humidity</h4>\n                        <GaugeChart id=\"gauge-chart4\"\n                            nrOfLevels={10}\n                            arcPadding={0.1}\n                            cornerRadius={3}\n                            percent={value.field2/100}\n                            textColor='black'\n                        />\n                    </div>\n                </div>\n                <br />\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <h4 style={{ textAlign: 'center' }}>Air Qualitty Index</h4>\n                        <GaugeChart id=\"gauge-chart4\"\n                            nrOfLevels={10}\n                            arcPadding={0.1}\n                            cornerRadius={3}\n                            percent={value.field3/100}\n                            formatTextValue={value => value + 'ppm'}\n                            textColor='black'\n                        />\n                    </div>\n                    <div className=\"col-6\">\n                        <h4 style={{ textAlign: 'center' }}>Noise Level</h4>\n                        <GaugeChart id=\"gauge-chart4\"\n                            nrOfLevels={10}\n                            arcPadding={0.1}\n                            cornerRadius={3}\n                            percent={value.field4/100}\n                            formatTextValue={value => value + 'dB'}\n                            textColor='black'\n                        />\n                    </div>\n                </div>\n            </div>\n\n            ))}\n\n        </div>\n    );\n}\n\nexport default\n    SensorValue;","import React from 'react'\nimport './page.css'\nimport SensorValue from './Area';\nimport { useState, useEffect } from 'react';\n\n\n\nconst Area1 = () => {\n\n    const [sensorValue, setSensorValue] = useState();\n\n    useEffect(() => {\n        //     setInterval(() => {\n        //         async function fetchSensorValue() {\n        //             const endPoint = 'https://api.thingspeak.com/channels/1449821/feeds.json?results=1';\n        //             const response = await fetch(endPoint);\n        //             const responseJSON = await response.json();\n        //             console.log({ responseJSON });\n\n        //             const { feeds } = responseJSON;\n        //             setSensorValue(feeds);\n\n        //         }\n\n        //         fetchSensorValue();\n        //     }, 30000)\n        // }, []);\n        async function fetchSensorValue() {\n            const endPoint = 'https://api.thingspeak.com/channels/1449821/feeds.json?results=1';\n            const response = await fetch(endPoint);\n            const responseJSON = await response.json();\n            console.log({ responseJSON });\n\n            const { feeds } = responseJSON;\n            setSensorValue(feeds);\n\n        }\n\n        fetchSensorValue();\n    }, []);\n\n    \n    return (\n        <div>\n            <SensorValue values={sensorValue} />\n\n            <div style={{ textAlign: 'center' }}>\n                <h2 className=\"page-header\">Chart</h2>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/1?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Temperature&type=line\"></iframe>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/2?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Humidity&type=line\"></iframe>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/3?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Air+Quality+Index&type=line\"></iframe>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/4?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Noise+Level&type=line\"></iframe>\n            </div>\n        </div>\n    )\n}\n\nexport default Area1\n","import React from 'react'\nimport './page.css'\nimport SensorValue from './Area';\nimport { useState, useEffect } from 'react';\n\n\n\nconst Area2 = () => {\n\n    const [sensorValue, setSensorValue] = useState();\n\n    useEffect(() => {\n        //     setInterval(() => {\n        //         async function fetchSensorValue() {\n        //             const endPoint = 'https://api.thingspeak.com/channels/1449821/feeds.json?results=1';\n        //             const response = await fetch(endPoint);\n        //             const responseJSON = await response.json();\n        //             console.log({ responseJSON });\n\n        //             const { feeds } = responseJSON;\n        //             setSensorValue(feeds);\n\n        //         }\n\n        //         fetchSensorValue();\n        //     }, 100000)\n        // }, []);\n        async function fetchSensorValue() {\n            const endPoint = 'https://api.thingspeak.com/channels/1449821/feeds.json?results=1';\n            const response = await fetch(endPoint);\n            const responseJSON = await response.json();\n            console.log({ responseJSON });\n\n            const { feeds } = responseJSON;\n            setSensorValue(feeds);\n\n        }\n\n        fetchSensorValue();\n    }, []);\n\n    \n    return (\n        <div>\n            <SensorValue values={sensorValue} />\n\n            <div style={{ textAlign: 'center' }}>\n                <h2 className=\"page-header\">Chart</h2>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/1?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Temperature&type=line\"></iframe>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/2?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Humidity&type=line\"></iframe>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/3?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Air+Quality+Index&type=line\"></iframe>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/4?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Noise+Level&type=line\"></iframe>\n            </div>\n        </div>\n    )\n}\n\nexport default Area2\n","import React from 'react'\nimport './page.css'\nimport SensorValue from './Area';\nimport { useState, useEffect } from 'react';\n\n\n\nconst Area3 = () => {\n\n    const [sensorValue, setSensorValue] = useState();\n\n    useEffect(() => {\n        //     setInterval(() => {\n        //         async function fetchSensorValue() {\n        //             const endPoint = 'https://api.thingspeak.com/channels/1449821/feeds.json?results=1';\n        //             const response = await fetch(endPoint);\n        //             const responseJSON = await response.json();\n        //             console.log({ responseJSON });\n\n        //             const { feeds } = responseJSON;\n        //             setSensorValue(feeds);\n\n        //         }\n\n        //         fetchSensorValue();\n        //     }, 100000)\n        // }, []);\n        async function fetchSensorValue() {\n            const endPoint = 'https://api.thingspeak.com/channels/1449821/feeds.json?results=1';\n            const response = await fetch(endPoint);\n            const responseJSON = await response.json();\n            console.log({ responseJSON });\n\n            const { feeds } = responseJSON;\n            setSensorValue(feeds);\n\n        }\n\n        fetchSensorValue();\n    }, []);\n\n    \n    return (\n        <div>\n            <SensorValue values={sensorValue} />\n\n            <div style={{ textAlign: 'center' }}>\n                <h2 className=\"page-header\">Chart</h2>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/1?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Temperature&type=line\"></iframe>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/2?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Humidity&type=line\"></iframe>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/3?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Air+Quality+Index&type=line\"></iframe>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/4?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Noise+Level&type=line\"></iframe>\n            </div>\n        </div>\n    )\n}\n\nexport default Area3\n","import React from 'react'\nimport './page.css'\nimport SensorValue from './Area';\nimport { useState, useEffect } from 'react';\n\n\n\nconst Area4 = () => {\n\n    const [sensorValue, setSensorValue] = useState();\n\n    useEffect(() => {\n        //     setInterval(() => {\n        //         async function fetchSensorValue() {\n        //             const endPoint = 'https://api.thingspeak.com/channels/1449821/feeds.json?results=1';\n        //             const response = await fetch(endPoint);\n        //             const responseJSON = await response.json();\n        //             console.log({ responseJSON });\n\n        //             const { feeds } = responseJSON;\n        //             setSensorValue(feeds);\n\n        //         }\n\n        //         fetchSensorValue();\n        //     }, 100000)\n        // }, []);\n        async function fetchSensorValue() {\n            const endPoint = 'https://api.thingspeak.com/channels/1449821/feeds.json?results=1';\n            const response = await fetch(endPoint);\n            const responseJSON = await response.json();\n            console.log({ responseJSON });\n\n            const { feeds } = responseJSON;\n            setSensorValue(feeds);\n\n        }\n\n        fetchSensorValue();\n    }, []);\n\n    \n    return (\n        <div>\n            <SensorValue values={sensorValue} />\n\n            <div style={{ textAlign: 'center' }}>\n                <h2 className=\"page-header\">Chart</h2>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/1?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Temperature&type=line\"></iframe>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/2?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Humidity&type=line\"></iframe>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/3?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Air+Quality+Index&type=line\"></iframe>\n                <iframe className=\"chart\" src=\"https://thingspeak.com/channels/1449821/charts/4?bgcolor=%23ffffff&color=%23d62020&dynamic=true&results=60&title=Noise+Level&type=line\"></iframe>\n            </div>\n        </div>\n    )\n}\n\nexport default Area4\n","import React from 'react'\n\nconst Configuration = () => {\n    return (\n        <div>\n           \n        </div>\n    )\n}\n\nexport default Configuration\n","// Note: Uncomment import lines during working with JSX Compiler.\r\nimport React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport logo from '../assets/images/logo.png'\r\n\r\nconst appStyle = {\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    backgroundColor: \"#0F2147\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"15px\"\r\n\r\n};\r\n\r\nconst formStyle = {\r\n    border: '1px solid #c9c9c9',\r\n    borderRadius: '5px',\r\n    background: '#f5f5f5',\r\n    width: '220px',\r\n    display: 'block'\r\n};\r\n\r\nconst labelStyle = {\r\n    fontFamily: 'Arial, Helvetica, sans-serif',\r\n    fontSize: '15px',\r\n};\r\n\r\nconst inputStyle = {\r\n    padding: '15px',\r\n    border: '1px solid #bfbfbf',\r\n    borderRadius: '3px',\r\n    boxSizing: 'border-box',\r\n    width: '100%'\r\n};\r\n\r\nconst submitStyle = {\r\n    padding: '17px 10px',\r\n    border: '1px solid #efffff',\r\n    borderRadius: '3px',\r\n    background: '#3085d6',\r\n    width: '100%',\r\n    fontSize: '15px',\r\n    color: 'white',\r\n    display: 'block'\r\n};\r\n\r\nconst Field = React.forwardRef(({ placeholder, type }, ref) => {\r\n    return (\r\n        <div>\r\n            <input ref={ref} type={type} placeholder={placeholder} style={inputStyle} />\r\n        </div>\r\n    );\r\n});\r\n\r\nconst Form = ({ onSubmit }) => {\r\n    const usernameRef = React.useRef();\r\n    const passwordRef = React.useRef();\r\n    const [error, setError] = React.useState(false)\r\n    let history = useHistory();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n            username: usernameRef.current.value\r\n        };\r\n        if (usernameRef.current.value === '') {\r\n            setError(true)\r\n        } else {\r\n            setError(false)\r\n        }\r\n        if (usernameRef.current.value) {\r\n            let email = usernameRef.current.value;\r\n            firebase.auth().sendPasswordResetEmail(email)\r\n                .then(function () {\r\n                    alert('Please check your email...')\r\n                }).catch(function (e) {\r\n                    console.log(e)\r\n                })\r\n        }\r\n\r\n        onSubmit(data);\r\n    };\r\n    return (\r\n        <form style={formStyle} onSubmit={handleSubmit} style={{ paddingLeft: 'auto !important' }}>\r\n\r\n            <div style={{ display: 'flex', flexDirection: 'row', alignItems: \"center\", flexWrap: \"wrap\" }}>\r\n\r\n                <div style={{\r\n                    backgroundColor: \"white\",\r\n                    height: \"480px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"column\",\r\n                    borderRadius: \"20px\",\r\n                    padding: \"20px\",\r\n                    maxWidth: \"400px\"\r\n                }}>\r\n                    <h2>Forgot Password</h2>\r\n                    <br />\r\n                    <p style={{ fontSize: 14, width: \"80%\" }}>Enter Email Address To Get Recovery Link On Email</p>\r\n                    <br /><br />\r\n                    <Field ref={usernameRef} type=\"email\" placeholder=\"Enter Email Address\" required />\r\n                    <br />\r\n\r\n                    <br />\r\n                    {error &&\r\n                        <div style={{ fontSize: 15, color: 'red' }}>Please Enter Email</div>}\r\n                    <div>\r\n                        <br />\r\n\r\n                        <button style={submitStyle} type=\"submit\">Send Recovery Email</button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"sidebar__logo\">\r\n                    <img src={logo} alt=\"company logo\" />\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n};\r\n\r\n// Usage example:\r\n\r\nconst ForgotPassword = () => {\r\n    const handleSubmit = data => {\r\n        const json = JSON.stringify(data, null, 4);\r\n        console.clear();\r\n        console.log(json);\r\n    };\r\n    return (\r\n        <div style={appStyle}>\r\n            <Form onSubmit={handleSubmit} />\r\n        </div>\r\n    );\r\n};\r\nexport default ForgotPassword;\r\n","import React from 'react'\n\nimport { Route, Switch } from 'react-router-dom'\n\nimport Dashboard from '../pages/Dashboard'\nimport Login from '../pages/login'\n\nimport Area1 from '../pages/Area1'\nimport Area2 from '../pages/Area2'\nimport Area3 from '../pages/Area3'\nimport Area4 from '../pages/Area4'\nimport Configuration from '../pages/Configuration'\nimport ForgotPassword from '../pages/ForgotPassword'\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route path='/' exact component={Login} />\n            <Route path='/dashboard' exact component={Dashboard} />\n            <Route path='/Configuration' component={Configuration} />\n            <Route path='/Area1' component={Area1} />\n            <Route path='/Area2' component={Area2} />\n            <Route path='/Area3' component={Area3} />\n            <Route path='/Area4' component={Area4} />\n            <Route path='/forgotpassword' component={ForgotPassword} />\n\n        </Switch>\n    )\n}\n\nexport default Routes\n","import React, { useEffect } from 'react'\n\nimport './layout.css'\n\nimport Sidebar from '../sidebar/Sidebar'\nimport TopNav from '../topnav/TopNav'\nimport Routes from '../Routes'\n\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport ThemeAction from '../../redux/actions/ThemeAction'\n\nconst Layout = () => {\n\n    const themeReducer = useSelector(state => state.ThemeReducer)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const themeClass = localStorage.getItem('themeMode', 'theme-mode-light')\n\n        const colorClass = localStorage.getItem('colorMode', 'theme-mode-light')\n\n        dispatch(ThemeAction.setMode(themeClass))\n\n        dispatch(ThemeAction.setColor(colorClass))\n    }, [dispatch])\n\n    return (\n        <BrowserRouter>\n\n            {window.location.pathname === \"/\" ?\n                <div className=\"layout__content-main\" style={{ padding: 0 }}>\n                    <Routes />\n                </div>\n                :\n\n                <Route render={(props) => (\n                    <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\n                        {window.location.pathname != '/' ?\n                            <Sidebar {...props} /> : <></>}\n                        <div className=\"layout__content\">\n                            {window.location.pathname != '/' ?\n                                <TopNav /> : <></>}\n                            <div className=\"layout__content-main\">\n                                <Routes />\n                            </div>\n                        </div>\n                    </div>\n                )} />\n\n            }\n\n\n\n        </BrowserRouter>\n    )\n}\n\nexport default Layout\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals'\n\nimport { createStore } from 'redux'\n\nimport { Provider } from 'react-redux'\n\nimport rootReducer from './redux/reducers'\n\nimport './assets/boxicons-2.0.7/css/boxicons.min.css'\nimport './assets/css/grid.css'\nimport './assets/css/theme.css'\nimport './assets/css/index.css'\n\nimport Layout from './components/layout/Layout'\n\nconst store = createStore(\n  rootReducer\n)\n\ndocument.title = 'Netcompany Office Devices'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Layout />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// abcd//"],"sourceRoot":""}